name: Build and Push SnarkOS Multi-Arch Docker Image

on:
  workflow_dispatch:
    inputs:
      git_ref:
        description: 'snarkOS commit SHA or tag'
        required: false
      image_tag:
        description: 'Image tag to push'
        required: false
      network_name:
        description: 'Network name: mainnet, testnet, canary'
        required: false
      build_snarkos_image:
        description: 'Build and push snarkos image (true/false)'
        required: false
        default: 'true'

env:
  GCP_PROJECT_ID: aleo-provable-migration-test
  GCP_ARTIFACT_REGISTRY_REGION: us-east1
  GCP_ARTIFACT_REPO: snarkos-containers

jobs:
  build-amd64:
    if: ${{ github.event.inputs.build_snarkos_image == 'true' }}
    runs-on: snarkos-amd64-builder  # Customize this label to match your runner setup
    name: Build SnarkOS for AMD64

    steps:
      - uses: actions/checkout@v4

      - name: Setup Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_IMG_BUILDER_KEY }}

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_IMG_BUILDER_KEY }}

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker us-east1-docker.pkg.dev

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Map NETWORK_NAME
        run: |
          case "${{ github.event.inputs.network_name }}" in
            mainnet) echo "NETWORK=0" >> $GITHUB_ENV && echo "NETWORK_DIR=mainnet" >> $GITHUB_ENV ;;
            testnet) echo "NETWORK=1" >> $GITHUB_ENV && echo "NETWORK_DIR=testnet" >> $GITHUB_ENV ;;
            canary)  echo "NETWORK=2" >> $GITHUB_ENV && echo "NETWORK_DIR=canary" >> $GITHUB_ENV ;;
            *) echo "Unknown network" && exit 1 ;;
          esac

      - name: Build and Push for AMD64
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64
          provenance: false
          tags: us-east1-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.GCP_ARTIFACT_REPO }}/${{ env.NETWORK_DIR }}/snarkos:${{ github.event.inputs.image_tag }}-amd64
          build-args: |
            GIT_REF=${{ github.event.inputs.git_ref }}
            NETWORK=${{ env.NETWORK }}

  build-arm64:
    if: ${{ github.event.inputs.build_snarkos_image == 'true' }}
    runs-on: snarkos-arm64-builder  # Customize this label to match your ARM64 runner
    name: Build SnarkOS for ARM64

    steps:
      - uses: actions/checkout@v4

      - name: Setup Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_IMG_BUILDER_KEY }}

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_IMG_BUILDER_KEY }}

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker us-east1-docker.pkg.dev

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Map NETWORK_NAME
        run: |
          case "${{ github.event.inputs.network_name }}" in
            mainnet) echo "NETWORK=0" >> $GITHUB_ENV && echo "NETWORK_DIR=mainnet" >> $GITHUB_ENV ;;
            testnet) echo "NETWORK=1" >> $GITHUB_ENV && echo "NETWORK_DIR=testnet" >> $GITHUB_ENV ;;
            canary)  echo "NETWORK=2" >> $GITHUB_ENV && echo "NETWORK_DIR=canary" >> $GITHUB_ENV ;;
            *) echo "Unknown network" && exit 1 ;;
          esac

      - name: Build and Push for ARM64
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/arm64
          provenance: false
          tags: us-east1-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.GCP_ARTIFACT_REPO }}/${{ env.NETWORK_DIR }}/snarkos:${{ github.event.inputs.image_tag }}-arm64
          build-args: |
            GIT_REF=${{ github.event.inputs.git_ref }}
            NETWORK=${{ env.NETWORK }}

  create-manifest:
    needs: [build-amd64, build-arm64]
    runs-on: snarkos-amd64-builder

    steps:
      - name: Set up Docker CLI for manifest
        uses: docker/setup-buildx-action@v3

      - name: Authenticate with GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_IMG_BUILDER_KEY }}

      - name: Map NETWORK_NAME
        run: |
          case "${{ github.event.inputs.network_name }}" in
            mainnet) echo "NETWORK=0" >> $GITHUB_ENV && echo "NETWORK_DIR=mainnet" >> $GITHUB_ENV ;;
            testnet) echo "NETWORK=1" >> $GITHUB_ENV && echo "NETWORK_DIR=testnet" >> $GITHUB_ENV ;;
            canary)  echo "NETWORK=2" >> $GITHUB_ENV && echo "NETWORK_DIR=canary" >> $GITHUB_ENV ;;
            *) echo "Unknown network" && exit 1 ;;
          esac

      - name: Configure Docker
        run: gcloud auth configure-docker us-east1-docker.pkg.dev

      - name: Create and Push Multi-Arch Manifest
        run: |
          docker manifest create us-east1-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.GCP_ARTIFACT_REPO }}/${{ env.NETWORK_DIR }}/snarkos:${{ github.event.inputs.image_tag }} \
            --amend us-east1-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.GCP_ARTIFACT_REPO }}/${{ env.NETWORK_DIR }}/snarkos:${{ github.event.inputs.image_tag }}-amd64 \
            --amend us-east1-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.GCP_ARTIFACT_REPO }}/${{ env.NETWORK_DIR }}/snarkos:${{ github.event.inputs.image_tag }}-arm64

          docker manifest push us-east1-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.GCP_ARTIFACT_REPO }}/${{ env.NETWORK_DIR }}/snarkos:${{ github.event.inputs.image_tag }}

 