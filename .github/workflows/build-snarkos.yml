name: Build and Push SnarkOS Multi-Arch Docker Image

on:
  workflow_dispatch:
    inputs:
      git_ref:
        description: 'snarkOS commit SHA or tag'
        required: false

env:
  GCP_PROJECT_ID: docker-registry-anf
  GCP_ARTIFACT_REGISTRY_REGION: us-east1
  GCP_ARTIFACT_REPO: snarkos-containers
  DOCKERHUB_REPO: aleohq/snarkos-test

jobs:

  extractor:
    runs-on: ubuntu-latest
    outputs:
      tag_name: ${{ steps.release_info.outputs.tag_name }}
      network: ${{ steps.release_info.outputs.network }}
    steps:
      - name: Clone and Extract Info
        id: release_info
        run: |
          git clone https://github.com/ProvableHQ/snarkOS.git snarkos
          cd snarkos
          git checkout ${{ github.event.inputs.git_ref }}
          git fetch --tags

          TAG_NAME=$(git tag --contains ${{ github.event.inputs.git_ref }} | head -n1 || echo "")

          if [[ -z "$TAG_NAME" ]]; then
            echo "No tag found for commit ${{ github.event.inputs.git_ref }}"
            exit 1
          fi

          echo "Extracted tag: $TAG_NAME"
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT

          if [[ "$TAG_NAME" == testnet-* ]]; then
            NETWORK="testnet"
          elif [[ "$TAG_NAME" == canary-* ]]; then
            NETWORK="canary"
          else
            NETWORK="mainnet"
          fi

          echo "Extracted network: $NETWORK"
          echo "network=$NETWORK" >> $GITHUB_OUTPUT
      
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-amd64:
    needs: extractor
    runs-on: snarkos-amd64-builder  # Customize this label to match your runner setup
    name: Build SnarkOS for AMD64

    steps:
      - uses: actions/checkout@v4

      - name: Setup Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_IMG_BUILDER_KEY }}

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_IMG_BUILDER_KEY }}

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker us-east1-docker.pkg.dev
        
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Map NETWORK_NAME
        run: |
          case "${{ needs.extractor.outputs.network }}" in
            mainnet) echo "NETWORK=0" >> $GITHUB_ENV && echo "NETWORK_DIR=mainnet" >> $GITHUB_ENV ;;
            testnet) echo "NETWORK=1" >> $GITHUB_ENV && echo "NETWORK_DIR=testnet" >> $GITHUB_ENV ;;
            canary)  echo "NETWORK=2" >> $GITHUB_ENV && echo "NETWORK_DIR=canary" >> $GITHUB_ENV ;;
            *) echo "Unknown network" && exit 1 ;;
          esac

      - name: Build and Push for AMD64
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          platforms: linux/amd64
          provenance: false
          tags: |
            us-east1-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.GCP_ARTIFACT_REPO }}/${{ env.NETWORK_DIR }}/snarkos:${{ needs.extractor.outputs.tag_name }}-amd64
            ${{ env.DOCKERHUB_REPO }}:${{ needs.extractor.outputs.tag_name }}-amd64
          build-args: |
            GIT_REF=${{ github.event.inputs.git_ref }}
            NETWORK=${{ needs.extractor.outputs.network }}

  build-arm64:
    needs: extractor
    runs-on: snarkos-arm64-builder  # Customize this label to match your ARM64 runner
    name: Build SnarkOS for ARM64

    steps:
      - uses: actions/checkout@v4

      - name: Setup Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_IMG_BUILDER_KEY }}

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_IMG_BUILDER_KEY }}

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker us-east1-docker.pkg.dev
        
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Map NETWORK_NAME
        run: |
          case "${{ needs.extractor.outputs.network }}" in
            mainnet) echo "NETWORK=0" >> $GITHUB_ENV && echo "NETWORK_DIR=mainnet" >> $GITHUB_ENV ;;
            testnet) echo "NETWORK=1" >> $GITHUB_ENV && echo "NETWORK_DIR=testnet" >> $GITHUB_ENV ;;
            canary)  echo "NETWORK=2" >> $GITHUB_ENV && echo "NETWORK_DIR=canary" >> $GITHUB_ENV ;;
            *) echo "Unknown network" && exit 1 ;;
          esac

      - name: Build and Push for ARM64
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/arm64
          provenance: false
          tags: |
            us-east1-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.GCP_ARTIFACT_REPO }}/${{ env.NETWORK_DIR }}/snarkos:${{ needs.extractor.outputs.tag_name }}-arm64
            ${{ env.DOCKERHUB_REPO }}:${{ needs.extractor.outputs.tag_name }}-arm64
          build-args: |
            GIT_REF=${{ github.event.inputs.git_ref }}
            NETWORK=${{ needs.extractor.outputs.network }}

  create-manifest:
    needs: [extractor, build-amd64, build-arm64]
    runs-on: snarkos-amd64-builder

    steps:
      - name: Set up Docker CLI for manifest
        uses: docker/setup-buildx-action@v3

      - name: Authenticate with GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_IMG_BUILDER_KEY }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Map NETWORK_NAME
        run: |
          case "${{ needs.extractor.outputs.network }}" in
            mainnet) echo "NETWORK=0" >> $GITHUB_ENV && echo "NETWORK_DIR=mainnet" >> $GITHUB_ENV ;;
            testnet) echo "NETWORK=1" >> $GITHUB_ENV && echo "NETWORK_DIR=testnet" >> $GITHUB_ENV ;;
            canary)  echo "NETWORK=2" >> $GITHUB_ENV && echo "NETWORK_DIR=canary" >> $GITHUB_ENV ;;
            *) echo "Unknown network" && exit 1 ;;
          esac

      - name: Configure Docker
        run: gcloud auth configure-docker us-east1-docker.pkg.dev

      - name: Create and Push Multi-Arch Manifest
        run: |
          # GCP Manifest
          docker manifest create us-east1-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.GCP_ARTIFACT_REPO }}/${{ env.NETWORK_DIR }}/snarkos:${{ needs.extractor.outputs.tag_name }} \
            --amend us-east1-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.GCP_ARTIFACT_REPO }}/${{ env.NETWORK_DIR }}/snarkos:${{ needs.extractor.outputs.tag_name }}-amd64 \
            --amend us-east1-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.GCP_ARTIFACT_REPO }}/${{ env.NETWORK_DIR }}/snarkos:${{ needs.extractor.outputs.tag_name }}-arm64

          docker manifest push us-east1-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.GCP_ARTIFACT_REPO }}/${{ env.NETWORK_DIR }}/snarkos:${{ needs.extractor.outputs.tag_name }}

          # Docker Hub Manifest
          docker manifest create ${{ env.DOCKERHUB_REPO }}:${{ needs.extractor.outputs.tag_name }} \
            --amend ${{ env.DOCKERHUB_REPO }}:${{ needs.extractor.outputs.tag_name }}-amd64 \
            --amend ${{ env.DOCKERHUB_REPO }}:${{ needs.extractor.outputs.tag_name }}-arm64

          docker manifest push ${{ env.DOCKERHUB_REPO }}:${{ needs.extractor.outputs.tag_name }}
