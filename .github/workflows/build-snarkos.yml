# .github/workflows/build-snarkos.yml

name: Build and Push SnarkOS Multi-Arch Docker Image

on:
  workflow_dispatch:
    inputs:
      git_ref:
        description: 'snarkOS commit SHA or tag'
        required: false
      image_tag:
        description: 'Image tag to push'
        required: false
      network_name:
        description: 'Network name: mainnet, testnet, canary'
        required: false
      build_snarkos_image:
        description: 'Build and push snarkos image (true/false)'
        required: false
        default: 'true'
      build_apimon_image:
        description: 'Build and push logging image (true/false)'
        required: false
        default: 'false'
jobs:
  build-and-push:
    name: Build and Push Multi-Arch Image
    runs-on: snarkos-builder

    env:
      GCP_PROJECT_ID: aleo-provable-migration-test
      GCP_ARTIFACT_REGISTRY_REGION: us-east1
      GCP_ARTIFACT_REPO: snarkos-containers

    steps:
      - name: Checkout Private Repo (Dockerfile + entrypoint.sh)
        uses: actions/checkout@v4

      - name: Setup Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_IMG_BUILDER_KEY }}

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_IMG_BUILDER_KEY }}

      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker us-east1-docker.pkg.dev

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Map NETWORK_NAME to NETWORK number and directory
        if: ${{ github.event.inputs.build_snarkos_image == 'true' }}
        id: network-map
        run: |
          case "${{ github.event.inputs.network_name }}" in
            mainnet)
              echo "NETWORK=0" >> $GITHUB_ENV
              echo "NETWORK_DIR=mainnet" >> $GITHUB_ENV
              ;;
            testnet)
              echo "NETWORK=1" >> $GITHUB_ENV
              echo "NETWORK_DIR=testnet" >> $GITHUB_ENV
              ;;
            canary)
              echo "NETWORK=2" >> $GITHUB_ENV
              echo "NETWORK_DIR=canary" >> $GITHUB_ENV
              ;;
            *)
              echo "ERROR: Unknown network '${{ github.event.inputs.network_name }}'." && exit 1
              ;;
          esac

      # Conditionally Build and Push SnarkOS Image
      - name: Build and Push SnarkOS Multi-Arch Image
        if: ${{ github.event.inputs.build_snarkos_image == 'true' }}
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64
          tags: us-east1-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.GCP_ARTIFACT_REPO }}/${{ env.NETWORK_DIR }}/snarkos:${{ github.event.inputs.image_tag }}
          build-args: |
            GIT_REF=${{ github.event.inputs.git_ref }}
            NETWORK=${{ env.NETWORK }}

      # Conditionally Build and Push Logging Image if set to true
      - name: Build and Push Logging Multi-Arch Image
        if: ${{ github.event.inputs.build_apimon_image == 'true' }}
        uses: docker/build-push-action@v5
        with:
          context: ./services
          file: ./servicesDockerfile.apimon
          push: true
          platforms: linux/amd64
          tags: us-east1-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.GCP_ARTIFACT_REPO }}/apimon:${{ github.event.inputs.image_tag || 'latest' }}
